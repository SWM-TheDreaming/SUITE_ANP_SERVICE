name: Docker Image SUITE_ANP_SERVICE CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: production application file setting
        run: |
          mkdir -p ./src/main/resources
          touch ./src/main/resources/application.yml


      - name: production firebase-config file setting
        run: |
          mkdir -p ./src/main/resources/firebase
          echo "${{ secrets.FIREBASE_CONFIG }}" | base64 --decode >> ./src/main/resources/firebase/suite-firebase-admin.json
          cat ./src/main/resources/firebase/suite-firebase-admin.json
          

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Init with Gradle
        uses: gradle/gradle-build-action@v2
      - run: gradle init

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.1.1
          arguments: build -x test


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2 ## 자신의 리전

      - name: Check if image with tag exists
        id: check-image
        run: |
          if aws ecr describe-images --repository-name suite-ecr --image-ids imageTag=suite-anp-service-latest; then
            echo "Image with tag $IMAGE_TAG exists in repository $REPOSITORY"
            echo "::set-output name=image_exists::true"
          else
            echo "Image with tag $IMAGE_TAG does not exist in repository $REPOSITORY"
            echo "::set-output name=image_exists::false"
          fi

      - name: Delete existing image with the same tag
        if: steps.check-image.outputs.image_exists == 'true'
        run: |
          aws ecr batch-delete-image --repository suite-ecr --image-ids imageTag=suite-anp-service-latest
      

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1



      - name: Build & Push to ECR
        run: |
          docker build -t suite-ecr:suite-anp-service-latest .
          docker tag suite-ecr:suite-anp-service-latest ${{ secrets.AWS_ACCOUNT_NUM }}.dkr.ecr.ap-northeast-2.amazonaws.com/suite-ecr:suite-anp-service-latest
          docker push ${{ secrets.AWS_ACCOUNT_NUM }}.dkr.ecr.ap-northeast-2.amazonaws.com/suite-ecr:suite-anp-service-latest
